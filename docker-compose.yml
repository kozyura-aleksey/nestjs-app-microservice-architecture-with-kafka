version: '3'

networks:
  users-service:
    driver: bridge

services:  
  api-gateway: 
    container_name: api-gateway
    hostname: api-gateway
    build: ./api-gateway
    env_file:
      - ./api-gateway/.env
    networks:
      - users-service
    depends_on:
      - users-service
    ports:
      - target: 3000
        published: 3000

  postgres_users-service: 
    container_name: postgres_users-service
    hostname: postgres_users-service
    image: postgres
    networks:
      - users-service
    env_file:
      - ./users-service/.env
    environment:
      PG_DATA: /var/lib/postgresql/data
    restart: always
    ports: 
      - target: 5432
        published: 5431
        mode: host
    volumes:
      - pgdata:/var/lib/postgresql/data

  users-service:
    container_name: users-service
    build: ./users-service
    command: npm run start:dev
    networks:
      - users-service 
    env_file:
      - ./users-service/.env
    volumes:
      - ./app/node_modules
    depends_on:
      - postgres_users-service
      - kafka1
    ports: 
      - target: 8000
        published: 8000

  zoo1:
    container_name: zoo1
    image: zookeeper:3.4.9
    restart: unless-stopped
    hostname: zoo1
    ports:
      - "2181:2181"
    networks:
      - users-service
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./full-stack/zoo1/data:/data
      - ./full-stack/zoo1/datalog:/datalog

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka:5.2.1
    hostname: kafka1
    ports:
      - "9092:9092"
    networks:
      - users-service
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./full-stack/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1

volumes:
  pgdata:
